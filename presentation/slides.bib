
@inproceedings{actario,
  title={{Actario: A framework for reasoning about actor systems}},
  author={Yasutake, Shohei and Watanabe, Takuo},
  booktitle={Workshop on Programming based on Actors, Agents, and Decentralized Control},
  series = {AGERE 2015},
  year = {2015}
}

@inproceedings{verdi,
 author = {Wilcox, James R. and Woos, Doug and Panchekha, Pavel and Tatlock, Zachary and Wang, Xi and Ernst, Michael D. and Anderson, Thomas},
 title = {Verdi: A Framework for Implementing and Formally Verifying Distributed Systems},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {357--368},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2737924.2737958},
 doi = {10.1145/2737924.2737958},
 acmid = {2737958},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, Formal verification, Verdi, distributed systems, proof assistants},
}

@Inbook{algebraicactors,
author="Agha, Gul
and Thati, Prasanna",
editor="Owe, Olaf
and Krogdahl, Stein
and Lyche, Tom",
title="An Algebraic Theory of Actors and Its Application to a Simple Object-Based Language",
bookTitle="From Object-Orientation to Formal Methods: Essays in Memory of Ole-Johan Dahl",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="26--57",
abstract="The development of Simula by Ole-Johan Dahl and Kristen Nygaard introduced a number of important programming language concepts -- object which supports modularity in programming through encapsulation of data and procedures, the concept of class which organizes behavior and supports Abstract Data Types, and the concept inheritance which provides subtyping relations and reuse [6]. Peter Wegner terms programming languages which use objects as object-based languages, and reserves the term object-oriented languages for languages which also support classes and inheritance [58].",
isbn="978-3-540-39993-3",
doi="10.1007/978-3-540-39993-3_4",
url="https://doi.org/10.1007/978-3-540-39993-3_4"
}

@INPROCEEDINGS{actorlaws,
    author = {Carl Hewitt and Henry Baker},
    title = {Applications of the Laws for Communicating Parallel Processes},
    booktitle = {IFIP Working Conf. on the Formal Desc. of Prog. Concepts},
    year = {1977}
}

@inproceedings{takka,
 author = {He, Jiansen and Wadler, Philip and Trinder, Philip},
 title = {Typecasting Actors: From Akka to TAkka},
 booktitle = {Proceedings of the Fifth Annual Scala Workshop},
 series = {SCALA '14},
 year = {2014},
 isbn = {978-1-4503-2868-5},
 location = {Uppsala, Sweden},
 pages = {23--33},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2637647.2637651},
 doi = {10.1145/2637647.2637651},
 acmid = {2637651},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {actor programming, fault tolerance, type checking},
} 

@book{Agha:1986:AMC:7929,
 author = {Agha, Gul},
 title = {Actors: A Model of Concurrent Computation in Distributed Systems},
 year = {1986},
 isbn = {0-262-01092-5},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}

@article{DBLP:journals/corr/NeykovaY16,
  author    = {Rumyana Neykova and
               Nobuko Yoshida},
  title     = {Multiparty Session Actors},
  journal   = {Logical Methods in Computer Science},
  volume    = {13},
  number    = {1},
  year      = {2017},
  url       = {https://doi.org/10.23638/LMCS-13(1:17)2017},
  doi       = {10.23638/LMCS-13(1:17)2017},
  timestamp = {Wed, 03 May 2017 14:47:58 +0200},
  biburl    = {http://dblp.org/rec/bib/journals/corr/NeykovaY16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@InProceedings{lchannels,
  author =	{Alceste Scalas and Nobuko Yoshida},
  title =	{{Lightweight Session Programming in Scala}},
  series =	{ECOOP 2016},
  year =	{2016},
  annote =	{Keywords: session types, Scala, concurrency}
}

@inproceedings{Dardha:2012:STR:2370776.2370794,
 author = {Dardha, Ornela and Giachino, Elena and Sangiorgi, Davide},
 title = {Session Types Revisited},
 series = {PPDP '12},
 year = {2012},
 publisher = {ACM},
} 

@inproceedings{Wadler:2012:PS:2364527.2364568,
 author = {Wadler, Philip},
 title = {Propositions As Sessions},
 series = {ICFP '12},
 year = {2012},
 pages = {273--286},
 keywords = {lambda calculus, linear logic, pi calculus},
} 

@INPROCEEDINGS{Wadler90lineartypes,
    author = {Philip Wadler},
    title = {Linear Types Can Change the World!},
    booktitle = {PROGRAMMING CONCEPTS AND METHODS},
    year = {1990},
    publisher = {North}
}

@article{King:1976:SEP:360248.360252,
 author = {King, James C.},
 title = {Symbolic Execution and Program Testing},
 journal = {Commun. ACM},
 issue_date = {July 1976},
 year = {1976},
 pages = {385--394},
 publisher = {ACM},
} 

@article{DBLP:journals/corr/BaldoniCDDF16,
  author    = {Roberto Baldoni and
               Emilio Coppa and
               Daniele Cono D'Elia and
               Camil Demetrescu and
               Irene Finocchi},
  title     = {A Survey of Symbolic Execution Techniques},
  journal   = {CoRR},
  volume    = {abs/1610.00502},
  year      = {2016},
  timestamp = {Wed, 07 Jun 2017 14:41:05 +0200},
  biburl    = {http://dblp.org/rec/bib/journals/corr/BaldoniCDDF16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inbook{st_lin_haskell,
  author = "Orchard, Marc and Yoshida, Nobuko",
  title = "Session Types with Linearity in Haskell",
  bookTitle = "Behavioural Types: from Theory to Tools",
  publisher="River publishers",
  year = "2017"
}

@article{futamura,
 author = {Futamura, Yoshihiko},
 title = {Partial Evaluation of Computation Process\&Mdash;AnApproach to a Compiler-Compiler},
 journal = {Higher Order Symbol. Comput.},
 issue_date = {December 1999},
 volume = {12},
 number = {4},
 month = dec,
 year = {1999},
 issn = {1388-3690},
 pages = {381--391},
 numpages = {11},
 url = {https://doi.org/10.1023/A:1010095604496},
 doi = {10.1023/A:1010095604496},
 acmid = {609205},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Futamura projections, compiler, interpreter, partial evaluation, program transformation},
}

@inproceedings{Suter:2011:SMR:2041552.2041575,
 author = {Suter, Philippe and K\"{o}ksal, Ali Sinan and Kuncak, Viktor},
 title = {Satisfiability Modulo Recursive Programs},
 booktitle = {Proceedings of the 18th International Conference on Static Analysis},
 series = {SAS'11},
 year = {2011},
 isbn = {978-3-642-23701-0},
 location = {Venice, Italy},
 pages = {298--315},
 numpages = {18},
 url = {http://dl.acm.org/citation.cfm?id=2041552.2041575},
 acmid = {2041575},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{Blanc:2013:OLV:2489837.2489838,
 author = {Blanc, R{\'e}gis and Kuncak, Viktor and Kneuss, Etienne and Suter, Philippe},
 title = {An Overview of the Leon Verification System: Verification by Translation to Recursive Functions},
 booktitle = {Proceedings of the 4th Workshop on Scala},
 series = {SCALA '13},
 year = {2013},
 isbn = {978-1-4503-2064-1},
 location = {Montpellier, France},
 pages = {1:1--1:10},
 articleno = {1},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2489837.2489838},
 doi = {10.1145/2489837.2489838},
 acmid = {2489838},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {satisfiability, verification},
} 

@phdthesis{xlang,
  title={{Verification by Reduction to Functional Programs}},
  author={Blanc, R{\'e}gis},
  year={2017},
  organization={EPFL}
}

@misc{genc1,
  author={Antognini, Marco},
  title={{From Verified Functions to Safe C Code}},
  howpublished={\url{https://github.com/mantognini/GenC}},
  year={2016}
}

@misc{genc2,
  author={Antognini, Marco},
  title={{Extending Safe C Support In Leon}},
  howpublished={\url{https://github.com/mantognini/GenC}},
  year={2017}
}

@techreport{voirol2016automating,
  title={Automating verification of functional programs with quantified invariants},
  author={Voirol, Nicolas and Kuncak, Viktor},
  year={2016}
}

@inproceedings{Hewitt,
 author = {Hewitt, Carl and Bishop, Peter and Steiger, Richard},
 title = {A Universal Modular ACTOR Formalism for Artificial Intelligence},
 booktitle = {Proceedings of the 3rd International Joint Conference on Artificial Intelligence},
 series = {IJCAI'73},
 year = {1973},
 location = {Stanford, USA},
 pages = {235--245},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=1624775.1624804},
 acmid = {1624804},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
} 


@inproceedings{Honda:1998:LPT:645392.651876,
 author = {Honda, Kohei and Vasconcelos, Vasco Thudichum and Kubo, Makoto},
 title = {Language Primitives and Type Discipline for Structured Communication-Based Programming},
 series = {ESOP '98},
 year = {1998},
} 


@inproceedings{Jespersen:2015:STR:2808098.2808100,
 author = {Jespersen, Thomas Bracht Laumann and Munksgaard, Philip and Larsen, Ken Friis},
 title = {Session Types for Rust},
 booktitle = {Proceedings of the 11th ACM SIGPLAN Workshop on Generic Programming},
 series = {WGP 2015},
 year = {2015},
 isbn = {978-1-4503-3810-3},
 location = {Vancouver, BC, Canada},
 pages = {13--22},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2808098.2808100},
 doi = {10.1145/2808098.2808100},
 acmid = {2808100},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Rust, Session types, concurrency, generic types},
} 

@Inbook{partialsym,
author="Bubel, Richard
and H{\"a}hnle, Reiner
and Ji, Ran",
editor="de Boer, Frank S.
and Bonsangue, Marcello M.
and Hallerstede, Stefan
and Leuschel, Michael",
title="Interleaving Symbolic Execution and Partial Evaluation",
bookTitle="FMCO 2009",
year="2010",
pages="125--146",
abstract="Partial evaluation is a program specialization technique that allows to optimize programs for which partial input is known. We show that partial evaluation can be used with advantage to speed up as well symbolic execution of programs. Interestingly, the input required for partial evaluation comes from symbolic execution itself which makes it natural to interleave partial evaluation and symbolic execution steps in a software verification setup.",
}

@book{Jones:1993:PEA:153676,
 author = {Jones, Neil D. and Gomard, Carsten K. and Sestoft, Peter},
 title = {Partial Evaluation and Automatic Program Generation},
 year = {1993},
 publisher = {Prentice-Hall, Inc.},
} 

@phdthesis{King:1970:PV:905403,
 author = {King, James Cornelius},
 title = {A Program Verifier},
 year = {1970},
 publisher = {Carnegie Mellon University},
}

